<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

    <mvc:annotation-driven enable-matrix-variables="true"
                           conversion-service="conversionService"
                           validator="validator">
        <mvc:message-converters>
            <!-- Use the HibernateAware mapper instead of the default -->
            <bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
                <property name="objectMapper">
                    <bean class="org.egov.infra.web.support.json.mapper.HibernateAwareObjectMapper"/>
                </property>
            </bean>
        </mvc:message-converters>
    </mvc:annotation-driven>

    <mvc:view-controller path="/error/500" view-name="error/500"/>
    <mvc:view-controller path="/error/404" view-name="error/404"/>
    <mvc:view-controller path="/error/403" view-name="error/403"/>
    <mvc:view-controller path="/error/400" view-name="error/400"/>

    <!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources/ directory -->
    <mvc:resources mapping="/resources/**" location="/resources/"/>

    <mvc:interceptors>
        <mvc:interceptor>
            <mvc:mapping path="/**"/>
            <mvc:exclude-mapping path="/resources/**"/>
            <bean class="org.egov.infra.web.spring.interceptor.CacheControlInterceptor"/>
        </mvc:interceptor>
    </mvc:interceptors>

    <bean id="conversionService" class="org.springframework.core.convert.support.DefaultConversionService"/>

    <bean class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
        <property name="targetClass" value="org.springframework.core.convert.support.ConversionServiceFactory"/>
        <property name="targetMethod" value="registerConverters"/>
        <property name="arguments">
            <list>
                <set>
                    <bean class="org.springframework.data.repository.support.DomainClassConverter">
                        <constructor-arg ref="conversionService"/>
                    </bean>
                </set>
                <ref bean="conversionService"/>
            </list>
        </property>
    </bean>

    <bean id="viewResolver" class="org.springframework.web.servlet.view.tiles3.TilesViewResolver"/>

    <bean id="tilesConfigurer" class="org.springframework.web.servlet.view.tiles3.TilesConfigurer">
        <property name="definitions">
            <list>
                <value>/WEB-INF/layout/tiles.xml</value>
            </list>
        </property>
    </bean>

    <bean id="validator" class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean">
        <property name="validationMessageSource" ref="messageSource"/>
    </bean>

    <bean id="messageSource" name="messageSource" class="org.springframework.context.support.ResourceBundleMessageSource">
        <property name="parentMessageSource" ref="parentMessageSource"/>
        <property name="basenames">
            <list>
                <value>messages/labels</value>
                <value>messages/errors</value>
                <value>messages/message</value>
            </list>
        </property>
        <!-- Disabling caching since on development-->
        <property name="cacheSeconds" value="#{environment['dev.mode'] ? 0 : -1}"/>
    </bean>

    <!-- Imports user-defined @Controller beans that process client requests -->
    <context:component-scan base-package="org.egov.apnimandi.web.controller"/>

</beans>
